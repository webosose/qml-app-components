#version 440
/* @@@LICENSE
 *
 * Copyright (c) 2017-2021 LG Electronics, Inc.
 *
 * Confidential computer software. Valid license from LG required for
 * possession, use or copying. Consistent with FAR 12.211 and 12.212,
 * Commercial Computer Software, Computer Software Documentation, and
 * Technical Data for Commercial Items are licensed to the U.S. Government
 * under vendor's standard commercial license.
 *
 * LICENSE@@@ */

layout(location = 0) out vec4 fragmentColor;
layout(location = 0) in vec2 qt_TexCoord0;

layout(binding = 1) uniform sampler2D source;

layout(std140, binding = 0) uniform buf {
    mat4 qt_Matrix;
    float qt_Opacity;
    float x_multiplier;
    float y_multiplier;
};

void main(void) {
	float x, y;
	x = (qt_TexCoord0.x - 0.5) * 1.0 * x_multiplier;
	y = (qt_TexCoord0.y - 0.5) * 1.0 * y_multiplier;
	fragmentColor = texture(source, qt_TexCoord0).rgba
	    * step(x * x + y * y, 0.25)
	    //* smoothstep((x * x + y * y) , 0.25 + 0.005, 0.25)
	    * qt_Opacity;
}
